<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="22" total="28" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-02T12:40:05 IST" name="Suite" finished-at="2022-06-02T12:46:25 IST" duration-ms="379949">
    <groups>
    </groups>
    <test started-at="2022-06-02T12:40:05 IST" name="Test" finished-at="2022-06-02T12:46:25 IST" duration-ms="379949">
      <class name="Mobile.TestLogin">
        <test-method is-config="true" signature="initializeDriver(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:39:37 IST" name="initializeDriver" finished-at="2022-06-02T12:40:05 IST" duration-ms="27973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Production]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Apcoa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Personal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method is-config="true" signature="initializeAssertions()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:40:05 IST" name="initializeAssertions" finished-at="2022-06-02T12:40:05 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeAssertions -->
        <test-method signature="selectCountry()[pri:1, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:40:05 IST" name="selectCountry" finished-at="2022-06-02T12:40:24 IST" duration-ms="19116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountry -->
        <test-method is-config="true" signature="AssertAll()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:40:24 IST" name="AssertAll" finished-at="2022-06-02T12:40:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertAll -->
        <test-method signature="loginAppcoa(MobileObjectMapper.LoginMapper)[pri:2, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:40:27 IST" name="loginAppcoa" data-provider="getLoginData" finished-at="2022-06-02T12:41:31 IST" duration-ms="64448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginMapper{email='sanchitgmp@getmyparking.com', password='testing', username='Sanchit Gupta'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAppcoa -->
        <test-method is-config="true" signature="initializeAssertions()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:40:27 IST" name="initializeAssertions" finished-at="2022-06-02T12:40:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeAssertions -->
        <test-method is-config="true" signature="AssertAll()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:41:31 IST" name="AssertAll" finished-at="2022-06-02T12:41:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertAll -->
        <test-method is-config="true" signature="initializeAssertions()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:41:31 IST" name="initializeAssertions" finished-at="2022-06-02T12:41:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeAssertions -->
        <test-method signature="addVehicle(MobileObjectMapper.VehicleMapper)[pri:3, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:41:31 IST" name="addVehicle" data-provider="getVehicleData" finished-at="2022-06-02T12:41:57 IST" duration-ms="25724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VehicleMapper{lpr='A 7777 R'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addVehicle -->
        <test-method is-config="true" signature="AssertAll()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:41:57 IST" name="AssertAll" finished-at="2022-06-02T12:41:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertAll -->
        <test-method is-config="true" signature="initializeAssertions()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:41:57 IST" name="initializeAssertions" finished-at="2022-06-02T12:41:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeAssertions -->
        <test-method signature="startExtendStopSession(MobileObjectMapper.ParkingMapper)[pri:5, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:41:57 IST" name="startExtendStopSession" data-provider="getParkingData" finished-at="2022-06-02T12:44:31 IST" duration-ms="154301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ParkingMapper{parkingname='Ringturm - Vienna | APCOA', parkingidentifier='Ringturm -', currency='â‚¬'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtendStopSession -->
        <test-method is-config="true" signature="AssertAll()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:44:31 IST" name="AssertAll" finished-at="2022-06-02T12:44:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertAll -->
        <test-method signature="deleteVehicle(MobileObjectMapper.VehicleMapper)[pri:6, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:44:32 IST" name="deleteVehicle" data-provider="getVehicleData" finished-at="2022-06-02T12:44:46 IST" duration-ms="14746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VehicleMapper{lpr='A 7777 R'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteVehicle -->
        <test-method is-config="true" signature="initializeAssertions()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:44:32 IST" name="initializeAssertions" finished-at="2022-06-02T12:44:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeAssertions -->
        <test-method is-config="true" signature="AssertAll()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:44:46 IST" name="AssertAll" finished-at="2022-06-02T12:44:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertAll -->
        <test-method is-config="true" signature="initializeAssertions()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:44:46 IST" name="initializeAssertions" finished-at="2022-06-02T12:44:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeAssertions -->
        <test-method signature="BuyPass(MobileObjectMapper.BuyPassMapper)[pri:7, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:44:46 IST" name="BuyPass" data-provider="getBuyPassData" finished-at="2022-06-02T12:46:25 IST" duration-ms="98744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BuyPassMapper{parkingidentifier='Raxstra', promo='REGTESTATPASS'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BuyPass -->
        <test-method is-config="true" signature="AssertAll()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:46:25 IST" name="AssertAll" finished-at="2022-06-02T12:46:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertAll -->
        <test-method is-config="true" signature="Teardown()[pri:0, instance:Mobile.TestLogin@18a3962d]" started-at="2022-06-02T12:46:26 IST" name="Teardown" finished-at="2022-06-02T12:46:29 IST" duration-ms="2729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Teardown -->
      </class> <!-- Mobile.TestLogin -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
